(*
BaseStats
=========
BaseStats handles cached stats information.

Unlike **Stats**, with **BaseStats** you don't have to open stats gametab everytime to access skills information.
When you start a wasplib script, **BaseStats** will start empty. The first time you ask it to retrieve a level with
BaseStats.GetCurrentLevel() it will open the stats tab and cache every level for each skill so next times you use
BaseStats.GetCurrentLevel() it doesn't require to open the gametab.

Stats are also tracked if you call Chat.LeveledUp() when there's a level up.
*)

{$DEFINE WL_BASESTATS_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

type
  BaseStats = record(TSRLBaseRecord)
  class var
    Levels: TIntegerArray;
    IsSetup: Boolean;
  end;

procedure BaseStats.DebugLn(text: String); constref; override;
var
  timeStamp: String;
begin
  timeStamp := SRL.TimeStamp();
  text := timeStamp + ':[BaseStats]: ' + text;
  WriteLn text;
end;

(*
BaseStats.Setup
~~~~~~~~~~~~~~~
.. pascal:: procedure BaseStats.Setup(); static;

Internal method automatically called when required.
You can call this yourBaseStats but you really don't have to.
*)
procedure BaseStats.Setup(); static;
var
  i: Int32;
begin
  if BaseStats.IsSetup or not Stats.Open() then
    Exit;

  BaseStats.Levels := [];
  BaseStats.DebugLn('Caching player levels.');

  for i := Ord(ERSSkill.ATTACK) to Ord(ERSSkill.HUNTER) do
    BaseStats.Levels += Stats.GetLevel(ERSSkill(i));

  BaseStats.IsSetup := BaseStats.Levels <> [];
end;

(*
BaseStats.GetCurrentLevel
~~~~~~~~~~~~~~~~~~~~~~~~~
.. pascal:: function BaseStats.GetCurrentLevel(Skill: ERSSkill): Int32; static;

Similar to TRSStats.GetCurrentLevel() but uses the cached values.

Example
-------

  WriteLn BaseStats.GetCurrentLevel(ERSSkill.PRAYER);
*)
function BaseStats.GetCurrentLevel(skill: ERSSkill): Int32; static; deprecated 'Use Stats.GetLevel() instead.';
begin
  if not BaseStats.IsSetup then
    BaseStats.Setup();

  if BaseStats.IsSetup then
    Result := BaseStats.Levels[Ord(skill)];
end;

(*
BaseStats.IncrementLevel
~~~~~~~~~~~~~~~~~~~~~~~~
.. pascal:: procedure BaseStats.IncrementLevel(skill: ERSSkill); static;

Internal method to update cached levels. This is automatically called by Chat.LeveledUp().

Example
-------

  WriteLn BaseStats.GetCurrentLevel(ERSSkill.PRAYER);
  BaseStats.IncrementLevel(ERSSkill.PRAYER);
  WriteLn BaseStats.GetCurrentLevel(ERSSkill.PRAYER);
*)
procedure BaseStats.IncrementLevel(skill: ERSSkill); static; deprecated 'Use Stats.IncrementCachedLevel() instead.';
begin
  if not BaseStats.IsSetup then
  begin
    BaseStats.Setup();
    Exit;
  end;

  BaseStats.Levels[Ord(skill)] += 1;
end;
