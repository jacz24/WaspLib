{$DEFINE WL_INTERFACEAREA_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

var
  EscapeCloseEnabled: Boolean;

//Get buttons on any interface
function TRSMainScreen.GetButton(): TRSButton;
var
  Buttons: TRSButtonArray := FindButtons([[21,21], [24,23]]);
begin
  if Buttons <> [] then
    Result := Buttons[High(Buttons)];
end;

//Checks for open classic interface
function TRSMainScreen.IsClassicOpen(): Boolean;
begin
  Result := (SRL.CountColor(CTS0(3358536, 2), InterfaceArea.Bounds()) > 10000);
end;

//Checks for open scroll interface
function TRSMainScreen.IsScrollOpen(): Boolean;
begin
  Result := (SRL.CountColor(CTS2(8693433, 5, 0.10, 1.17), InterfaceArea.Bounds()) > 35000);
end;

//Checks for any open interface
function TRSMainScreen.HasInterface: Boolean;
begin
  Result := Self.IsClassicOpen() or Self.IsScrollOpen();
end;


function TRSMainScreen.ClickCloseButton(PressEscape: Boolean = False): Boolean;
var
  CloseButton: TRSButton := Self.GetButton();
  i: Int32;
begin
  Result := CloseButton <> [];

  if not Result then
    Exit;

  if (PressEscape and EscapeCloseEnabled) then
  begin
    Keyboard.PressKey(VK_ESCAPE);

    //Antiban stuff.
    if Random() < Antiban.GetUniqueNumber(0.15, 0.1, 0.2) then
      for i := 0 to Round(Antiban.GetUniqueNumber(2, 1, 3)) do
      begin
        if not Keyboard.IsKeyDown(VK_ESCAPE) then
        begin
          if Antiban.BioDice() then
            Keyboard.PressKey(VK_ESCAPE)
          else
            Keyboard.KeyDown(VK_ESCAPE);
        end;

        Wait(20, 150, wdLeft);

        if Keyboard.IsKeyDown(VK_ESCAPE) and Antiban.BioDice(0.5) then
        begin
          Keyboard.KeyUp(VK_ESCAPE);
          Wait(20, 80, wdLeft);
        end;
      end;

    if Keyboard.IsKeyDown(VK_ESCAPE) then
      Keyboard.KeyUp(VK_ESCAPE);

    Exit;
  end;

  Result := CloseButton.Click();
end;


//Close any open Interface
function TRSMainScreen.CloseInterface(pressEscape: Boolean): Boolean;
begin
  if not MainScreen.HasInterface() then
    Exit(True);

  if Self.ClickCloseButton(pressEscape) then
    Result := WaitUntil(not MainScreen.HasInterface(), SRL.TruncatedGauss(50, 1500), Random(1500, 2000));

  if (not Result and (pressEscape and EscapeCloseEnabled)) then
    EscapeCloseEnabled := False;
end;

function TRSMainScreen.CloseInterface(chance: Double = BioHash): Boolean; overload;
var
  pressEscape: Boolean;
begin
  if chance = BioHash then
    pressEscape := Antiban.BioDice(EBioBehavior.ESCAPE_CHANCE)
  else
    pressEscape := SRL.Dice(chance);

  Result := Self.CloseInterface(pressEscape);
end;

procedure TSRL.Setup; override;
begin
  inherited;

  EscapeCloseEnabled := True;
end;
