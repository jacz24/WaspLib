{$DEFINE ANDREW_MUSHTREE_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

type
  ERSMushTreeButton = (HOUSE_ON_THE_HILL, VERDANT_VALLEY, STICKY_SWAMP, MUSHROOM_MEADOW);

  TRSMushTree = type TRSTitledInteface;

procedure TRSMushtree.Setup(); override;
begin
  inherited;
  Self.Name := 'Mycelium Transportation System';
end;

procedure TRSMushTree.SetupAlignment(mode: ERSClientMode); override;
begin
  inherited;

  case mode of
    ERSClientMode.FIXED:
      begin
        Self.Alignment.Left := [@InterfaceArea.X1];
        Self.Alignment.Right := [@InterfaceArea.X2];
        Self.Alignment.Top := [@InterfaceArea.Y1];
        Self.Alignment.Bottom := [@InterfaceArea.Y2];
        Self.Alignment.Center.MaxWidth := 472;
        Self.Alignment.Center.MaxHeight := 294;
      end;

    ERSClientMode.RESIZABLE_CLASSIC, ERSClientMode.RESIZABLE_MODERN:
      begin
        Self.Alignment.Left := [@InterfaceArea.X1];
        Self.Alignment.Right := [@InterfaceArea.X2];
        Self.Alignment.Top := [@InterfaceArea.Y1, -1];
        Self.Alignment.Bottom := [@InterfaceArea.Y2];
        Self.Alignment.Center.MaxWidth := 472;
        Self.Alignment.Center.MaxHeight := 294;
      end;
  end;
end;

function TRSMushTree.IsOpen(): Boolean;
begin
  Result := Self.IsTitle(Self.Name);
end;

function TRSMushTree.IsOpen(waitTime: Int32): Boolean; overload;
begin
  Result := WaitUntil(Self.IsOpen(), SRL.TruncatedGauss(50, 1500), waitTime);
end;

function TRSMushTree.Close(pressEscape: Boolean = False): Boolean;
begin
  if not Self.IsOpen() then
    Exit(True);

  Result := Self.ClickCloseButton(pressEscape) and WaitUntil(not Self.IsOpen(), SRL.TruncatedGauss(50, 1500), Random(1500, 2000));
end;

function TRSMushTree.GetButtons(): TRSButtonArray;
begin
  Result := Self.FindButtons([[200, 52]]);
end;

function TRSMushTree.GetButton(button: ERSMushTreeButton): TRSButton;
var
  buttons: TRSButtonArray;
begin
  buttons := Self.GetButtons();

  if buttons <> [] then
    Result := buttons[button];
end;

var
 MushTree : TRSMushtree;

procedure TRSClient.ClientModeChanged(); override;
begin
  inherited;

  MushTree.SetupAlignment(Self.Mode);
end;

procedure TSRL.Setup(); override;
begin
  inherited;

  MushTree.Setup();
end;
