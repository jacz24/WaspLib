{$DEFINE WL_STRING_INCLUDED}
{$IFNDEF WL_UTILS}
  {$I WaspLib/utils.simba}
{$ENDIF}

const
  REGEX_URL: String = '^https?:\/\/(?:www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b(?:[-a-zA-Z0-9()@:%_\+.~#?&\/=]*)$';
  REGEX_UUID: String = '[0-9a-fA-F]{32}|[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}';

//by Flight
function String.Replicate(count: Integer; separator: String = ''): String;
var
  i: Int32;
begin
 Result := Self;

 for i := 1 to count do
   Result += separator + Self;
end;


function String.IsURL(): Boolean;
begin
  Result := ExecRegExpr(REGEX_URL, System.Trim(Self));
end;

function String.IsUUID(): Boolean;
begin
  Result := ExecRegExpr(REGEX_UUID, System.Trim(Self));
end;

function String.IsUUIDV4(): Boolean;
var
  tmp: String;
begin
  tmp := System.Trim(Self);

  case Length(tmp) of
    36: if Self[15] <> '4' then Exit;
    32: if Self[13] <> '4' then Exit;
    else Exit;
  end;

  Result := ExecRegExpr(REGEX_UUID, tmp);
end;


function ValidURL(url: String): Boolean;
begin
  Result := url.IsURL();
end;

function ValidUUID(uuid: String): Boolean;
begin
  Result := uuid.IsUUID();
end;

function ValidUUIDV4(uuid: String): Boolean;
begin
  Result := uuid.IsUUIDV4();
end;


function TStringArray.ToLower(): TStringArray;
var
  i: Int32;
begin
  for i := 0 to High(Self) do
    Result += Self[i].ToLower();
end;



